<apex:page standardStylesheets="false" showHeader="false" applyHtmlTag="false" docType="html-5.0">
  <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

  <head>
    <meta charset="UTF-8" />
    <title>Hello React</title>
    <script src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.26.0/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/6.26.0/polyfill.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.0.1/redux.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="/soap/ajax/45.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/45.0/apex.js" type="text/javascript"></script>
    <apex:includeScript value="//cdn.rawgit.com/mattwelch/makeDeferredProvider/master/makeDeferredProvider.min.js" />
    <apex:stylesheet value="//cdn.rawgit.com/mailtoharshit/LightingDesignSystem/master/salesforce-lightning-design-system-v0.8.0/assets/styles/salesforce-lightning-design-system-vf.min.css"
    />
    <apex:stylesheet value="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
    <style type="text/css">
    </style>
    <apex:slds />
    <meta name="viewport" content="width=device-width, user-scalable=no" />
  </head>

  <body>
    <div id="root" class="slds"></div>
    <script type="text/Javascript">



    </script>
    <script type="text/babel">

      class SearchPage extends React.Component {
        constructor(props) {
          super(props);
          this.state = {
            contacts: [],
            updateContact: [],
            deleteContact : []
          };
        }

        
        Reset = ()=>{
          document.getElementById('InputLastName').value = "";
          document.getElementById('InputFirstName').value = "";
          document.getElementById('InputDepartment').value = "";
          document.getElementById('InputPhone').value = "";
        }

        Search=()=>{
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var InputLastName = document.getElementById('InputLastName').value;
          var InputFirstName = document.getElementById('InputFirstName').value;
          var InputDepartment = document.getElementById('InputDepartment').value;
          var InputPhone = document.getElementById('InputPhone').value;
          var query = "Select Id, LastName, FirstName, Department, Phone from contact "
          if(InputLastName !== "" ||  InputFirstName !== "" || InputDepartment !== "" || InputPhone !==""){
            query = query + "Where ";
            if(InputLastName !== ""){
              query = query + "LastName like \'%" + InputLastName +"%\' AND ";
            }
            if(InputFirstName !== ""){
              query = query + "FirstName like \'%" + InputFirstName +"%\' AND ";
            }
            if(InputDepartment !== ""){
              query = query + "Department like \'%" + InputDepartment +"%\' AND ";
            }
            if(InputPhone !== ""){
              query = query + "Phone like \'%" + InputPhone +"%\' AND ";
            }
            query = query.substr(0,query.length-4);
          }
          query = query +"order by lastmodifieddate desc";



          var result = sforce.connection.query(query);
          var records = result.getArray("records");

          this.setState(state=>({
            contacts:records,
          }));
        }

        SortAsc = () =>{
          var lastName = this.state.lastName.sort(
            function(a,b){
              return (a < b ? -1 : 1);
            }
          );
          this.setState(state=>({
            lastName:lastName,
          }));
        }
        toggle() {
          this.setState(prevState => ({
            modal: !prevState.modal
          }));
        }
        //Modal
        saveCont=()=>{
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var newCont = new sforce.SObject("Contact");
          newCont.LastName = document.getElementById('InputLastNameModal').value;
          newCont.FirstName = document.getElementById('InputFirstNameModal').value;
          newCont.Department = document.getElementById('InputDepartmentModal').value;
          newCont.Phone = document.getElementById('InputPhoneModal').value;
          var result = sforce.connection.upsert("Id",[newCont]);
          this.Search();


          
        }

        displayUpdateContPage = (id,lastName,firstName,department,phone) =>{
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var query = "Select Id, LastName, FirstName, Department, Phone from contact where Id = \'"+ id +"\'";
          var result = sforce.connection.query(query);
          var record = result.getArray("records");
          console.log("result:"+result.record)
          console.log("records:"+record)
          console.log("id:"+id)
          // this.setState(state=>({
          //   updateContact:record,
          // }));
          this.setState({updateContact:result});
          document.getElementById( "UpdateLastNameModal" ).value = lastName ;
          document.getElementById( "UpdateFirstNameModal" ).value = firstName ;
          document.getElementById( "UpdateDepartmentModal" ).value = department ;
          document.getElementById( "UpdatePhoneModal" ).value = phone ;
        }
        saveUpdateCont = () => {
          var contact = new sforce.SObject("Contact");
          contact = this.state.updateContact;
          contact.records.LastName = document.getElementById( "UpdateLastNameModal" ).value;
          contact.records.FirstName = document.getElementById( "UpdateFirstNameModal" ).value;
          contact.records.Department = document.getElementById( "UpdateDepartmentModal" ).value;
          contact.records.Phone = document.getElementById( "UpdatePhoneModal" ).value;
          console.log(contact);
          var result = sforce.connection.update([contact.records]);
          this.Search();

        }
        //Delete button
        deleteCont = (id) =>{
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var delResult = sforce.connection.deleteIds([id]);
          this.Search();
        }
        render() {
          return (
            <React.Fragment>
              <nav class="navbar navbar-dark bg-primary">
                <form class="form-inline">
                  <div class = "slds-scope">
                    <button class="slds-button slds-button_neutral" type="button" data-toggle="modal" data-target="#exampleModal">New Contact</button>
                    <button class="slds-button slds-button_neutral" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="true" aria-controls="collapseExample">Collapse</button>
                  </div>
                </form>
              </nav>
              <div class="collapse" id="collapseExample">
                <div class="slds-scope" >
                  <div class="slds-form-element">
                    <label class="slds-form-element__label" for="text-input-id-1">
                      <abbr class="slds-required"> </abbr>Last Name</label>
                    <div class="slds-form-element__control">
                      <input type="text" id="text-input-id-1" class="slds-input" id="InputLastName"/>
                    </div>
                  </div>
                  <div class="slds-form-element">
                    <label class="slds-form-element__label" for="text-input-id-1">
                      <abbr class="slds-required"> </abbr>First Name</label>
                    <div class="slds-form-element__control">
                      <input type="text" id="text-input-id-1" class="slds-input" id="InputFirstName"/>
                    </div>
                  </div>
                  <div class="slds-form-element">
                    <label class="slds-form-element__label" for="text-input-id-1">
                      <abbr class="slds-required"> </abbr>Department</label>
                    <div class="slds-form-element__control">
                      <input type="text" id="text-input-id-1" class="slds-input" id="InputDepartment"/>
                    </div>
                  </div>
                  <div class="slds-form-element">
                    <label class="slds-form-element__label" for="text-input-id-1">
                      <abbr class="slds-required"> </abbr>Phone</label>
                    <div class="slds-form-element__control">
                      <input type="text" id="text-input-id-1" class="slds-input" id="InputPhone"/>
                    </div>
                  </div>
                  <br/>
                  <button class="slds-button slds-button_neutral" onClick={this.Reset}>Reset</button>
                  <button class="slds-button slds-button_brand" onClick={this.Search}>Search</button>


                  <br/>
                </div>
              </div>
              <br/>

              <div className="slds-scrollable--x">
                <table className="slds-table slds-table--bordered">
                  <thead>
                    <tr className="slds-text-heading--label">
                      <th scope="col">
                        <span className="slds-truncate">Delete</span>
                      </th>
                      <th scope="col">
                        <span className="slds-truncate">Edit</span>
                      </th>
                      <th scope="col">
                        <span className="slds-truncate" onClick = {this.SortAsc}>Last Name</span>
                      </th>
                      <th scope="col">
                        <span className="slds-truncate">First Name</span>
                      </th>
                      <th scope="col">
                        <span className="slds-truncate">Department</span>
                      </th>
                      <th scope="col">
                        <span className="slds-truncate">Phone</span>
                      </th>
                      <th scope="col">
                        <span className="slds-truncate">Id</span>
                      </th>
                    </tr>

                  </thead>
                  <tbody>
                    {this.state.contacts.map((contact)=> {
                      return(
                        <tr data-label="contacts">
                          <td>
                            <button 
                              class = "btn btn-danger"
                              onClick={()=>this.deleteCont(contact.Id)}
                            >
                            Delete
                            </button>
                          </td>
                          <td>
                            <button 
                              class="btn btn-light" 
                              type="button" 
                              data-toggle="modal" 
                              data-target="#updateContact" 
                              onClick={()=>this.displayUpdateContPage(contact.Id,contact.LastName,contact.FirstName,contact.Department,contact.Phone)}
                            >
                            Edit Contact
                            </button>
                          </td>
                          <td>{contact.LastName}</td>
                          <td>{contact.FirstName}</td>
                          <td>{contact.Department}</td>
                          <td>{contact.Phone}</td>
                          <td>{contact.Id}</td>
                        </tr>
                      )

                    })}
                  </tbody>
                </table>
              </div>

              {/* Modal */}
              <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">New Contact</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                      <label class="slds-form-element__label" for="text-input-id-1">
                        <abbr class="slds-required"> </abbr>Last Name</label>
                      <div class="slds-form-element__control">
                        <input type="text" id="text-input-id-1" class="slds-input" id="InputLastNameModal"/>
                      </div>
                      <label class="slds-form-element__label" for="text-input-id-1">
                        <abbr class="slds-required"> </abbr>First Name</label>
                      <div class="slds-form-element__control">
                        <input type="text" id="text-input-id-1" class="slds-input" id="InputFirstNameModal"/>
                      </div>
                      <label class="slds-form-element__label" for="text-input-id-1">
                        <abbr class="slds-required"> </abbr>Department</label>
                      <div class="slds-form-element__control">
                        <input type="text" id="text-input-id-1" class="slds-input" id="InputDepartmentModal"/>
                      </div>
                      <label class="slds-form-element__label" for="text-input-id-1">
                        <abbr class="slds-required"> </abbr>Phone</label>
                      <div class="slds-form-element__control">
                        <input type="text" id="text-input-id-1" class="slds-input" id="InputPhoneModal"/>
                      </div>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      <button type="button" class="btn btn-primary" onClick = {this.saveCont}>Save</button>
                    </div>
                  </div>
                </div>
              </div>
              {/* --Modal-- */}

              {/* Modal */};
              <div class="modal fade" id="updateContact" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document"  >
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">Edit Contact</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                      </button>
                    </div>
                    <div class="modal-body">
                      <label class="slds-form-element__label" for="text-input-id-1">
                        <abbr class="slds-required"> </abbr>Last Name</label>
                      <div class="slds-form-element__control">
                        <input type="text" id="text-input-id-1" class="slds-input" id="UpdateLastNameModal"/>
                      </div>
                      <label class="slds-form-element__label" for="text-input-id-1">
                        <abbr class="slds-required"> </abbr>First Name</label>
                      <div class="slds-form-element__control">
                        <input type="text" id="text-input-id-1" class="slds-input" id="UpdateFirstNameModal"/>
                      </div>
                      <label class="slds-form-element__label" for="text-input-id-1">
                        <abbr class="slds-required"> </abbr>Department</label>
                      <div class="slds-form-element__control">
                        <input type="text" id="text-input-id-1" class="slds-input" id="UpdateDepartmentModal"/>
                      </div>
                      <label class="slds-form-element__label" for="text-input-id-1">
                        <abbr class="slds-required"> </abbr>Phone</label>
                      <div class="slds-form-element__control">
                        <input type="text" id="text-input-id-1" class="slds-input" id="UpdatePhoneModal"/>
                      </div>
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      <button type="button" class="btn btn-primary" onClick = {this.saveUpdateCont}>Update</button>
                    </div>
                  </div>
                  
                </div>
                
              </div>
              {/* --Modal-- */}

            </React.Fragment>
          );
        }
      }
      class EditContact extends React.Component {
        constructor(props) {
          super(props);
          this.state = {
            id: props.updateId,
            updateContact : [],
            deleteContact : []
          };
        }

        render() {
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var query = "Select Id, LastName, FirstName from contact where Id = \'"+ this.props.updateId +"\'";
          var result = sforce.connection.query(query);
          var record = result.getArray("records");

          return (
            <div>
            aaa
            </div>

            
          );
        }
      }

      // ========================================

      ReactDOM.render(
        <SearchPage />,
        document.getElementById('root')
      );

    </script>
  </body>

  </html>

</apex:page>