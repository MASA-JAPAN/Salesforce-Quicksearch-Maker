<apex:page standardStylesheets="false" showHeader="false" applyHtmlTag="false" docType="html-5.0">
  <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

  <head>
    <meta charset="UTF-8" />
    <title>Hello React</title>
    <script src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.26.0/babel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/6.26.0/polyfill.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.0.1/redux.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://unpkg.com/@material-ui/core@latest/umd/material-ui.production.min.js"></script>
    <script src="/soap/ajax/45.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/45.0/apex.js" type="text/javascript"></script>
    <apex:includeScript value="//cdn.rawgit.com/mattwelch/makeDeferredProvider/master/makeDeferredProvider.min.js" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
    <style type="text/css">
    </style>
    <apex:slds />
  </head>

  <body>
    <div id="root" class="slds"></div>
    <script type="text/Javascript">



    </script>
    <script type="text/babel">
      const {
        Button,
        AppBar,
        Toolbar,
        TextField,
        Table,
        TableBody,
        TableCell,
        TableHead,
        TableRow,
        Icon,
        DeleteIcon,
        DialogTitle,
        Dialog,
        DialogActions,
        DialogContent,
        DialogContentText,
        SvgIcon,
        Fab,
        InputBase,



      } = MaterialUI;

      class SearchPage extends React.Component {
        constructor(props) {
          super(props);
          this.state = {
            contacts: [],
            updateContact: [],
            deleteContact : [],
            openContModal: false,
            open:false,
          };

        }
        
        Reset = ()=>{
          document.getElementById('InputLastName').value = "";
          document.getElementById('InputFirstName').value = "";
          document.getElementById('InputDepartment').value = "";
          document.getElementById('InputPhone').value = "";
        }

        Search=()=>{
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var InputLastName = document.getElementById('InputLastName').value;
          var InputFirstName = document.getElementById('InputFirstName').value;
          var InputDepartment = document.getElementById('InputDepartment').value;
          var InputPhone = document.getElementById('InputPhone').value;
          var query = "Select Id, LastName, FirstName, Department, Phone from contact "
          if(InputLastName !== "" ||  InputFirstName !== "" || InputDepartment !== "" || InputPhone !==""){
            query = query + "Where ";
            if(InputLastName !== ""){
              query = query + "LastName like \'%" + InputLastName +"%\' AND ";
            }
            if(InputFirstName !== ""){
              query = query + "FirstName like \'%" + InputFirstName +"%\' AND ";
            }
            if(InputDepartment !== ""){
              query = query + "Department like \'%" + InputDepartment +"%\' AND ";
            }
            if(InputPhone !== ""){
              query = query + "Phone like \'%" + InputPhone +"%\' AND ";
            }
            query = query.substr(0,query.length-4);
          }
          query = query +"order by lastmodifieddate desc";



          var result = sforce.connection.query(query);
          var records = result.getArray("records");

          this.setState(state=>({
            contacts:records,
          }));
        }

        SortAsc = () =>{
          var lastName = this.state.lastName.sort(
            function(a,b){
              return (a < b ? -1 : 1);
            }
          );
          this.setState(state=>({
            lastName:lastName,
          }));
        }
        toggle() {
          this.setState(prevState => ({
            modal: !prevState.modal
          }));
        }
        //Modal
        saveCont=()=>{
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var newCont = new sforce.SObject("Contact");
          newCont.LastName = document.getElementById('InputLastNameModal').value;
          newCont.FirstName = document.getElementById('InputFirstNameModal').value;
          newCont.Department = document.getElementById('InputDepartmentModal').value;
          newCont.Phone = document.getElementById('InputPhoneModal').value;
          var result = sforce.connection.upsert("Id",[newCont]);
          this.Search();


          
        }

        displayUpdateContPage = (id,lastName,firstName,department,phone) =>{
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var query = "Select Id, LastName, FirstName, Department, Phone from contact where Id = \'"+ id +"\'";
          var result = sforce.connection.query(query);
          var record = result.getArray("records");
          console.log("result:"+result.record)
          console.log("records:"+record)
          console.log("id:"+id)
          // this.setState(state=>({
          //   updateContact:record,
          // }));
          this.setState({updateContact:result});
          // document.getElementById( "UpdateLastNameModal" ).value = lastName ;
          // document.getElementById( "UpdateFirstNameModal" ).value = firstName ;
          // document.getElementById( "UpdateDepartmentModal" ).value = department ;
          // document.getElementById( "UpdatePhoneModal" ).value = phone ;
          this.setState(state=>({
            setOpen:true,
          }));
        }
        saveUpdateCont = (id) => {
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var query = "Select Id, LastName, FirstName, Department, Phone from contact where Id = \'"+ id +"\'";
          var searchResult = sforce.connection.query(query);
          var records = searchResult.getArray("records");
          var contact = new sforce.SObject("Contact");
          contact = records[0];
          contact.LastName = document.getElementsByClassName(id)[0].value;
          contact.FirstName = document.getElementsByClassName(id)[1].value;
          contact.Department = document.getElementsByClassName(id)[2].value;
          var result = sforce.connection.update([contact]);
          console.log(result);
          let saveButton = document.getElementById(id);
          saveButton.style.backgroundColor = 'rgb(0, 255, 132)';

        }
        //Delete button
        deleteCont = (id) =>{
          sforce.connection.sessionId = '{!GETSESSIONID()}';
          var delResult = sforce.connection.deleteIds([id]);
          this.Search();
        }

        handleClickOpen = () => {
          this.setState(state=>({
          Open:true,
        }));
        };

        handleClose = () => {
          setOpen(false);
        };

        handleValueChange =  (id, num, value) => {
          
          let changedInput = document.getElementsByClassName(id)[num];
          changedInput.style.backgroundColor = '#ffff47';
          let saveButton = document.getElementById(id);
          saveButton.style.backgroundColor = 'rgb(224, 224, 224)';

        }

        render() {

          return (
            <React.Fragment>
              <div>
              
                <AppBar position = "static">
                  <Toolbar variant="dense">
                    Customer Search
                  </Toolbar>
                </AppBar>


              </div>
              <div>
                <TextField
                  id="InputLastName"
                  label="LastName"
                  margin="normal"
                  variant="outlined"
                />
                <TextField
                  id="InputFirstName"
                  label="FirstName"
                  margin="normal"
                  variant="outlined"
                />
                <TextField
                  id="InputDepartment"
                  label="Department"
                  margin="normal"
                  variant="outlined"
                />
                <TextField
                  id="InputPhone"
                  label="Phone"
                  margin="normal"
                  variant="outlined"
                />
              </div>
              <div>
                <Button variant="contained" onClick = {this.Reset}>
                  Reset
                </Button>
                <Button variant="contained" color="primary" onClick = {this.Search}>
                  Search
                </Button>
              </div>
              <div>
                <Table>
                  <TableHead>
                    <TableRow>
                      <TableCell>
                        Edit
                      </TableCell>
                      <TableCell>
                        Last Name
                      </TableCell>
                      <TableCell>
                        First Name
                      </TableCell>
                      <TableCell>
                        Department
                      </TableCell>
                      <TableCell>
                        Phone
                      </TableCell>
                      <TableCell>
                        Id
                      </TableCell>
                    </TableRow>

                  </TableHead>
                  <TableBody>
                    {this.state.contacts.map((contact)=> {
                      return(
                        <TableRow data-label="contacts">
                          <TableCell>
                            <Fab 
                              size="medium"
                              onClick = {()=>this.saveUpdateCont(contact.Id)}
                              id = {contact.Id}
                            >
                              <SvgIcon >
                                <path d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z" />
                              </SvgIcon>
                            </Fab>
                          </TableCell>
                          <TableCell>
                            <input
                              defaultValue={contact.LastName} 
                              className = {contact.Id}
                              name = "LastName"
                              onChange = {(e) => this.handleValueChange(contact.Id,0,e.target.value)}
                            />
                          </TableCell>
                          <TableCell>
                            <input
                              defaultValue={contact.FirstName} 
                              className = {contact.Id}
                              name = "FirstName"
                              onChange = {(e) => this.handleValueChange(contact.Id,1,e.target.value)}
                            />
                          </TableCell>
                          <TableCell>
                            <input
                              defaultValue={contact.Department}
                              className = {contact.Id}
                              name = "Department"
                              onChange = {(e) => this.handleValueChange(contact.Id,2,e.target.value)}
                            />
                          </TableCell>
                          <TableCell>
                            <input
                              defaultValue={contact.Phone}
                              className = {contact.id}
                              name = "Phone"
                              onChange = {(e) => this.handleValueChange(contact.Id,3,e.target.value)}
                            />
                          </TableCell>
                          <TableCell>
                            <InputBase
                              defaultValue={contact.Id}
                            />
                          </TableCell>
                        </TableRow>
                      )

                    })}
                  </TableBody>
                </Table>
              </div>

              
              <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby="form-dialog-title">
                <DialogTitle id="form-dialog-title">Subscribe</DialogTitle>
                <DialogContent>
                  <DialogContentText>
                    To subscribe to this website, please enter your email address here. We will send updates
                    occasionally.
                  </DialogContentText>
                  <TextField
                    autoFocus
                    margin="dense"
                    id="name"
                    label="Email Address"
                    type="email"
                    fullWidth
                  />
                </DialogContent>
                <DialogActions>
                  <Button onClick={this.handleClose} color="primary">
                    Cancel
                  </Button>
                  <Button onClick={this.handleClose} color="primary">
                    Subscribe
                  </Button>
                </DialogActions>
              </Dialog>


            </React.Fragment>

          );
        }
      }
      
function UpdateModal() {
  const [open, setOpen] = React.useState(false);

  const handleClickOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
  };

  return (
    <div>
      <Fab 
        size="medium"
        aria-label="edit"
        onClick={handleClickOpen}
      >
        <SvgIcon >
          <path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" />
        </SvgIcon>
      </Fab>
      <Dialog open={open} onClose={handleClose} aria-labelledby="form-dialog-title">
        <DialogTitle id="form-dialog-title">Subscribe</DialogTitle>
        <DialogContent>
          <DialogContentText>
            To subscribe to this website, please enter your email address here. We will send updates
            occasionally.
          </DialogContentText>
          <TextField
            autoFocus
            margin="dense"
            id="name"
            label="Email Address"
            type="email"
            fullWidth
          />
        </DialogContent>
        <DialogActions>
          <Button onClick={handleClose} color="primary">
            Cancel
          </Button>
          <Button onClick={handleClose} color="primary">
            Subscribe
          </Button>
        </DialogActions>
      </Dialog>
    </div>
  );
}


      // ========================================

      ReactDOM.render(
        <SearchPage />,
        document.getElementById('root')
      );

    </script>
  </body>

  </html>

</apex:page>